"""
Load the raw binary file generated by 'test_histogram.c' and plot the histogram

The binary storage follows a quick-and-dirty approach, which works on x86-64 
gcc system and may work on other systems, if all elements (zignormw code and
Python stack) have been compiled by similar compilers on one an the same system.
To make it more portable, we should be more explicit about the exact integer
sizes and double format. But it's OK for now.


"""
import numpy as np
import matplotlib.pyplot as plt


fp = "histogram.bin"
fo = "histogram.png"

with open(fp, "rb") as f:
    Nbins = np.fromfile(f, dtype=np.uint32, count=1)[0]
    HV = np.fromfile(f, dtype=np.float64, count = Nbins) 
    H = np.fromfile(f, dtype=np.uint64, count = Nbins)

# normalize the Gaussian to fit the histogram
A =  H.sum() * (HV.max()-HV.min()) / (Nbins-1) 

plt.figure(1, figsize = (5.5,3.8))
plt.clf()
plt.title("Histogram (log) {0:d} Gaussian PRNG samples".format(H.sum()))
plt.semilogy(HV, H, '.',
             label = 'PRNG histogram')
plt.semilogy(HV, A/np.sqrt(np.pi*2) * np.exp(-0.5*HV**2), 'r-',
             label = 'theor. distribution')
plt.xlabel('random value')
plt.ylabel('number of occurrences')
plt.legend(loc='lower center', frameon=False)
plt.savefig(fo, dpi = 150)
